on:
  push:
    branches: ["prod"]
    
jobs:
 build:
  runs-on: ubuntu-latest
  steps:
    - name: Checkout prod
      uses: actions/checkout@main
    - name: Install doctl
      uses: digitalocean/action-doctl@v2
      with:
        token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
    - name: Update production env file <FBCONFIG>
      run: sed -i 's|<FBCONFIG>|'${{ secrets.FBCONFIG }}'|' $GITHUB_WORKSPACE/.env.production
    - name: Update production env file <BASE_URL>
      run: sed -i 's|<BASE_URL>|'${{ secrets.BASE_URL }}'|' $GITHUB_WORKSPACE/.env.production
    - name: Build container image
      run: docker build -t registry.digitalocean.com/npuzzle/main:frontend-$(echo $GITHUB_SHA | head -c7) .
    - name: Log in to DigitalOcean Container Registry with short-lived credentials
      run: doctl registry login --expiry-seconds 1200
    - name: Push image to DigitalOcean Container Registry
      run: docker push registry.digitalocean.com/npuzzle/main:frontend-$(echo $GITHUB_SHA | head -c7)
    - name: Update deployment file
      run: TAG=$(echo $GITHUB_SHA | head -c7) && sed -i 's|<IMAGE>|registry.digitalocean.com/npuzzle/main:frontend-'${TAG}'|' $GITHUB_WORKSPACE/k8s/auto-deployment.yml
    - name: Update deployment file <FBCONFIG>
      run: sed -i 's|<FBCONFIG>|'${{ secrets.FBCONFIG }}'|' $GITHUB_WORKSPACE/k8s/auto-deployment.yml        
    - name: Save DigitalOcean kubeconfig with short-lived credentials
      run: doctl kubernetes cluster kubeconfig save --expiry-seconds 600 ${{ secrets.DO_CLUSTER_NAME }}
    - name: Deploy to DigitalOcean Kubernetes
      run: kubectl apply -f $GITHUB_WORKSPACE/k8s/auto-deployment.yml
    - name: Verify deployment
      run: kubectl rollout status deployment/npuzzle-frontend
